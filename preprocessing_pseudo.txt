from geometry.point IMPORT Point

from geometry.diagram IMPORT Diagram

from math IMPORT sqrt

from matplotlib IMPORT pyplot as plt





DEFINE FUNCTION get_region_estimator_point(estimator_points, region_label):

    FOR p IN estimator_points:

        IF p.label EQUALS region_label:

            RETURN p

    RETURN None





DEFINE FUNCTION generate_label_points(diagram:Diagram, omega:float) -> list:



    SET label_points TO []

    SET estimator_points TO []



    SET region_index TO -1

    FOR region IN diagram.regions:

        region_index += 1



        SET n TO len(region)



        IF n < 2 or -1 IN region:

            continue



        SET center_x TO 0

        SET center_y TO 0



        SET region_label_points TO []



        FOR point IN region:



            SET corner_x TO diagram.vertices[point].x

            SET corner_y TO diagram.vertices[point].y



            center_x += corner_x

            center_y += corner_y



            SET corner_point TO Point(corner_x, corner_y, label=region_index)

            SET corner_point.origin_point_x TO corner_x

            SET corner_point.origin_point_y TO corner_y

            

            region_label_points.append(corner_point)

        

        SET center TO Point(center_x/n, center_y/n, label=region_index)

        SET center.plot_element TO plt.plot(center.x, center.y, 'bo')

        estimator_points.append(center)



        FOR l IN region_label_points:

            SET delta TO center + center.direction_to(l) * center.distance(l) * omega



            l.set_position(delta.x, delta.y)

            SET l.plot_element TO plt.plot(delta.x, delta.y, 'ro')

        

        label_points.extend(region_label_points)

    

    RETURN label_points, estimator_points
